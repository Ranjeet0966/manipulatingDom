// Html code
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta http-equiv="X-UA-Compatible" content="ie=edge" />
    <title>JS For Beginners</title>
    <link rel="stylesheet" href="style.css">
  </head>
  <body>
    <header>
      <h1>Booking App</h1>
    </header>

    <section class="container">
      <form id="my-form">
        <h1>Add User</h1>
        <div class="msg"></div>
        <div>
          <label for="name">Name:</label>
          <input type="text" id="name">
        </div>
        <div>
          <label for="email">Email:</label>
          <input type="text" id="email">
        </div>
        <div>
            <label for="mobile">Mobile number:</label>
            <input type="text" id="mobile">
          </div>
        <input class="btn" type="submit" value="Submit">
      </form>

      <ul id="users"></ul>

      
    </section>
    

    <script src="bookingapp.js"></script>
  </body>
</html>


// js-code
const myForm = document.querySelector('#my-form');
const nameInput = document.querySelector('#name');
const mobileInput = document.querySelector('#mobile');
const emailInput = document.querySelector('#email');
const msg = document.querySelector('.msg');
const userList = document.querySelector('#users');

// Listen for form submit
myForm.addEventListener('submit', onSubmit);

// Function to handle form submission
function onSubmit(e) {
  e.preventDefault();

  if (nameInput.value === '' || emailInput.value === '') {
    msg.classList.add('error');
    msg.innerHTML = 'Please enter all fields';
    setTimeout(() => msg.remove(), 3000);
  } else {
// code for storing more users data in local storage
    const user = {
      name: nameInput.value,
      email: emailInput.value,
      mobile: mobileInput.value
    };

    // Retrieve existing user data from LocalStorage
    const storedData = localStorage.getItem('userData');
    let users = storedData ? JSON.parse(storedData) : [];

    // Ensure users is an array
    if (!Array.isArray(users)) {
      users = [];
    }
   
    users.push(user); // Add the new user to the existing users array

    // Store the updated user data in LocalStorage
    localStorage.setItem('userData', JSON.stringify(users));

    displayUsers(users);

    nameInput.value = '';
    emailInput.value = '';
  }
}

// Function to display users
function displayUsers(users) {
  userList.innerHTML = ''; // Clear existing list items

  users.forEach(user => {
    const li = document.createElement('li');
    li.appendChild(document.createTextNode(`${user.name}: ${user.email}: ${user.mobile}`));
    userList.appendChild(li);
  });
}
// function to delete a user data from UI and local storage
function deleteUser(e) {
  if (e.target.classList.contains('delete-btn')) {
    const userIndex = e.target.dataset.index;
    let users = JSON.parse(localStorage.getItem('userData'));

    // Remove the user from the array
    users.splice(userIndex, 1);

    // Update LocalStorage
    localStorage.setItem('userData', JSON.stringify(users));

    // Re-display the users
    displayUsers(users);
  }

// Function to handle user actions (edit/delete)
function handleUserAction(e) {
  if (e.target.classList.contains('edit-btn')) {
    const userIndex = e.target.dataset.index;
    const user = users[userIndex];

    // Update the email input with the user's current email address
    emailInput.value = user.email;

    // Remove the user from the array (to be re-added with updated email)
    users.splice(userIndex, 1);

    // Update LocalStorage
    localStorage.setItem('userData', JSON.stringify(users));

    // Re-display the users
    displayUsers(users);
  } else if (e.target.classList.contains('delete-btn')) {
    const userIndex = e.target.dataset.index;

    // Remove the user from the array
    users.splice(userIndex, 1);

    // Update LocalStorage
    localStorage.setItem('userData', JSON.stringify(users));

    // Re-display the users
    displayUsers(users);
  }
}

// Perform operations after the DOM is fully loaded
document.addEventListener('DOMContentLoaded', () => {
  // Retrieve existing user data from LocalStorage
  const storedData = localStorage.getItem('userData');
  let users = storedData ? JSON.parse(storedData) : [];

  // Ensure users is an array
  if (!Array.isArray(users)) {
    users = [];
  }

  displayUsers(users);
});


  
